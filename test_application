import streamlit as st
import requests
from PIL import Image

# Define the API endpoints
BASE_URL = "https://api.aimlapi.com"
TTS_ENDPOINT = "/text-to-speech"
OCR_ENDPOINT = "/image-to-text"
STT_ENDPOINT = "/audio-to-text"
TTA_ENDPOINT = "/text-to-audio"

def text_to_speech():
    st.header("Text to Speech")
    user_input = st.text_area("Input Text", value="Hello, how are you?", height=150)
    
    if st.button("Convert to Speech"):
        with st.spinner("Processing..."):
            payload = {
                "text": user_input,
                "voice": "default"
            }
            try:
                response = requests.post(TTS_API_URL, json=payload)
                response.raise_for_status()
                audio_file_path = "tts_output_audio.wav"
                with open(audio_file_path, "wb") as audio_file:
                    audio_file.write(response.content)
                st.success("Conversion successful! Play the audio below.")
                st.audio(audio_file_path, format="audio/wav")
            except requests.exceptions.RequestException as e:
                st.error(f"An error occurred: {e}")

def image_to_text():
    st.header("Image to Text")
    uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
    
    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="Uploaded Image", use_column_width=True)
        
        if st.button("Extract Text"):
            with st.spinner("Processing..."):
                files = {'file': uploaded_file.getvalue()}
                try:
                    response = requests.post(OCR_API_URL, files=files)
                    response.raise_for_status()
                    response_data = response.json()
                    extracted_text = response_data.get("text", "")
                    st.write("### Extracted Text")
                    st.text(extracted_text)
                except requests.exceptions.RequestException as e:
                    st.error(f"An error occurred: {e}")

def audio_to_text():
    st.header("Audio to Text")
    uploaded_file = st.file_uploader("Choose an audio file...", type=["wav", "mp3", "ogg"])
    
    if uploaded_file is not None:
        st.audio(uploaded_file, format=uploaded_file.type)
        
        if st.button("Extract Text"):
            with st.spinner("Processing..."):
                files = {'file': uploaded_file.getvalue()}
                try:
                    response = requests.post(STT_API_URL, files=files)
                    response.raise_for_status()
                    response_data = response.json()
                    extracted_text = response_data.get("text", "")
                    st.write("### Extracted Text")
                    st.text(extracted_text)
                except requests.exceptions.RequestException as e:
                    st.error(f"An error occurred: {e}")

def text_to_audio():
    st.header("Text to Audio")
    user_input = st.text_area("Input Text", value="Hello, how are you?", height=150)
    
    if st.button("Convert to Speech"):
        with st.spinner("Processing..."):
            payload = {
                "text": user_input,
                "voice": "default"
            }
            try:
                response = requests.post(TTA_API_URL, json=payload)
                response.raise_for_status()
                audio_file_path = "tta_output_audio.wav"
                with open(audio_file_path, "wb") as audio_file:
                    audio_file.write(response.content)
                st.success("Conversion successful! Play the audio below.")
                st.audio(audio_file_path, format="audio/wav")
            except requests.exceptions.RequestException as e:
                st.error(f"An error occurred: {e}")

def main():
    st.title("AI/ML API Client")
    st.sidebar.title("Navigation")
    options = ["Text to Speech", "Image to Text", "Audio to Text", "Text to Audio"]
    choice = st.sidebar.selectbox("Select a feature", options)
    
    if choice == "Text to Speech":
        text_to_speech()
    elif choice == "Image to Text":
        image_to_text()
    elif choice == "Audio to Text":
        audio_to_text()
    elif choice == "Text to Audio":
        text_to_audio()

if __name__ == "__main__":
    main()

